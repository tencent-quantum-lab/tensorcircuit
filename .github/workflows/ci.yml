name: ci
on: [push, pull_request]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    name: test
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest] # macos-latest disabled to save quota
        python-version: ["3.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements/requirements.txt
          pip install --no-cache-dir -r requirements/requirements-extra.txt
          pip install --no-cache-dir -r requirements/requirements-dev.txt
          pip install --no-cache-dir -r requirements/requirements-types.txt
      - name: black linter
        run: |
          black . --check
      - name: mypy checker
        run: |
          mypy tensorcircuit
      - name: pylint checker
        run: |
          pylint tensorcircuit tests
      - name: test scripts
        run: |
          pytest --cov=tensorcircuit --cov-report=xml -svv --benchmark-skip
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-20.04'
        uses: codecov/codecov-action@v2
        with:
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: run example demos
        run: |
          cd examples
          python mcnoise_check.py
          python vqnhe_h6.py
          python mcnoise_boost.py
          python quantumng.py
          python universal_lr.py
          python parameter_shift.py
          python mpsvsexact.py
      - name: setup build
        run: |
          python3 setup.py build
